name: Deploy Frontend (Production)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: frontend-deploy-main
  cancel-in-progress: true

env:
  NODE_VERSION: '20'
  PRODUCTION_DOMAIN: horekmart.com
  DEPLOY_BASE_PATH: /var/www/horekmart-frontend
  PM2_APP_NAME: horekmart-frontend

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          if [ $? -ne 0 ]; then
            echo "‚ùå npm ci failed"
            exit 1
          fi

      - name: Lint
        run: |
          npm run lint
          if [ $? -ne 0 ]; then
            echo "‚ùå Linting failed"
            exit 1
          fi

      - name: Build (production)
        env:
          NEXT_PUBLIC_API_URL: https://app.horekmart.com/api
          NEXT_PUBLIC_APP_URL: https://www.horekmart.com
          NODE_ENV: production
        run: |
          echo "üèóÔ∏è Starting Next.js build..."
          echo "Current directory: $(pwd)"
          echo "Environment variables:"
          echo "  NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL"
          echo "  NEXT_PUBLIC_APP_URL=$NEXT_PUBLIC_APP_URL"
          echo "  NODE_ENV=$NODE_ENV"
          
          npm run build
          BUILD_EXIT_CODE=$?
          
          echo "Build completed with exit code: $BUILD_EXIT_CODE"
          echo "Contents after build:"
          ls -la
          
          if [ $BUILD_EXIT_CODE -ne 0 ]; then
            echo "‚ùå Build failed with exit code $BUILD_EXIT_CODE"
            exit 1
          fi

      - name: Verify build output
        run: |
          echo "üîç Verifying build output..."
          echo "Current directory: $(pwd)"
          echo "Directory listing:"
          ls -la
          
          if [ ! -d .next ]; then
            echo "::error title=Missing build output::.next directory not found after build. Failing early."
            echo "Full workspace listing:"
            find . -maxdepth 2 -type d | sort
            echo "Package.json exists: $(test -f package.json && echo 'YES' || echo 'NO')"
            echo "Next.config exists: $(test -f next.config.ts && echo 'YES' || echo 'NO')"
            exit 1
          fi
          
          echo "‚úÖ .next build directory present"
          echo ".next directory contents:"
          ls -la .next/
          echo ".next directory size:"
          du -sh .next || true

      - name: Export build metadata
        run: |
          echo "BUILD_SHA=${GITHUB_SHA}" > build-info.txt
          echo "BUILD_TIME=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> build-info.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: next-build
          retention-days: 2
          path: |
            .next
            package.json
            package-lock.json
            next.config.ts
            build-info.txt

  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to server (server-side build)
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} 'bash -s' <<'EOF'
          set -euo pipefail
          
          echo "üöÄ Starting frontend deployment on $(hostname)"
          
          APP_DIR=/var/www/horekmart-frontend
          PM2_APP_NAME=horekmart-frontend
          PRODUCTION_DOMAIN=horekmart.com
          
          cd "$APP_DIR"
          
          echo "üì• Fetching latest code"
          git fetch origin main --depth=1
          git reset --hard origin/main
          
          echo "üì¶ Installing dependencies (including dev for build)"
          npm ci
          
          echo "üèóÔ∏è Building application on server"
          NEXT_PUBLIC_API_URL=https://app.horekmart.com/api NEXT_PUBLIC_APP_URL=https://www.horekmart.com NODE_ENV=production npm run build
          
          echo "üßπ Cleaning dev dependencies after build"
          npm ci --omit=dev
          
          if [ ! -d .next ]; then
            echo "‚ùå Build failed - .next directory not created"
            exit 1
          fi
          
          echo "üîÑ Restarting PM2 application"
          pm2 stop "$PM2_APP_NAME" 2>/dev/null || true
          pm2 delete "$PM2_APP_NAME" 2>/dev/null || true
          PORT=3000 pm2 start npm --name "$PM2_APP_NAME" -- start
          sleep 3
          pm2 save
          
          echo "ü©∫ Health check"
          for i in 1 2 3; do
            CODE=$(curl -k -s -o /dev/null -w "%{http_code}" https://$PRODUCTION_DOMAIN || true)
            if [ "$CODE" = "200" ]; then
              echo "‚úÖ Frontend deployment successful!"
              exit 0
            fi
            echo "‚è≥ Health check attempt $i failed (status=$CODE), retrying in 5s"
            sleep 5
          done
          
          echo "‚ö†Ô∏è Health check failed but deployment completed"
          exit 0
          EOF

      - name: Report status
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "‚úÖ Deployment successful: https://${{ env.PRODUCTION_DOMAIN }}"
          else
            echo "‚ùå Deployment failed"
            exit 1
          fi